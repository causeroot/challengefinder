#!/usr/local/bin/octave -q

args = argv();

BASE_PATH = strcat(pwd,"/data/",args{1});

modelFile = strcat(BASE_PATH, "/svmModel/model.binsev");
dictionaryWordsFile = strcat(BASE_PATH, "/urlTerms/dictionary_words_file.binsev");
dictionaryPairsFile = strcat(BASE_PATH, "/urlTerms/dictionary_pairs_file.binsev");

search_string_out_file = strcat(BASE_PATH, "/searchTerms/newSearchStrings.txt");

eval_output_file = strcat(BASE_PATH, "/fitness/evalout.txt");

eval_file = strcat(BASE_PATH, "/rawSiteData/newUrlList.siteWords");
predNewFile = strcat(BASE_PATH,'/svmModel/predNew.binsev');
accuracyNewFile = strcat(BASE_PATH,'/svmModel/accuracyNew.binsev');
pNewFile = strcat(BASE_PATH,'/svmModel/pNew.binsev');

load("-v7",modelFile,"model")
load("-v7",dictionaryWordsFile, "dictionary_words")
load("-v7",dictionaryPairsFile, "dictionary_pairs")

[eval_urls,pNew,accuracyNew,predNew] = classify(eval_file,model,dictionary_words, dictionary_pairs);

fprintf('============================ Writing Output Files ========================\n');
save("-mat7-binary", predNewFile, "predNew")
fprintf('\n     Successful Save to predNew.binsev');
save("-mat7-binary", accuracyNewFile, "accuracyNew")
fprintf('\n     Successful Save to accuracyNew.binsev');
save("-mat7-binary", pNewFile, "pNew")
fprintf('\n     Successful Save to pNew.binsev\n\n');

pNew
eval_urls

list = (1:size(pNew))';
listOut = ones(size(pNew,1),1);
urlOrderOut = sortrows(horzcat(pNew,predNew,list));

fileID = fopen(eval_output_file,'w');

for i = size(urlOrderOut,1):0
    fprintf(fileID,"%6.4f  %d",urlOrderOut(i,1),urlOrderOut(i,2));
    fprintf(fileID," ");
    q = char(eval_urls(urlOrderOut(i,3)));
    fprintf(fileID,"%s",q);
    fprintf(fileID," \n");
    listOut(i) = strcat(urlOrderOut(i,1)," ",q);
end

fclose(fileID);

for i = size(urlOrderOut,1):1
    q = char(eval_urls(urlOrderOut(i,3)));
    listOut(i) = strcat(urlOrderOut(i,1)," ",q);
end

listOut

fprintf('\nProcessed \n%s \nURL Classification to \n%s\n', char(eval_file),char(eval_output_file));
fprintf('\nNumber of (likely) new Challenges: %i\n', sum(predNew>0));
fprintf('\n\n');

fprintf('==========================================================================\n');
fprintf('=================================== DONE!!! ==============================\n');
fprintf('==========================================================================\n\n');
